service: live-integration-api

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  tags: ${self:custom.tags}
  stackTags: ${self:custom.tags}
  runtime: nodejs18.x
  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetA}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DetachNetworkInterface
        - ec2:DeleteNetworkInterface
        - ec2:AssignPrivateIpAddresses
        - ec2:UnassignPrivateIpAddresses
      Resource: '*'
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource: '*'
  environment:
    REGION: ${self:custom.region}
    STAGE: ${opt:stage, 'dev'}
    SNS_TOPIC_ARN: ${ssm:/omni-reports/${self:provider.stage}/error-notification/sns/arn}

  deploymentBucket:
    name: ${ssm:/omni-dw/${self:provider.stage}/sls/deployment/bucket}
    serverSideEncryption: AES256

custom:
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  tags:
    Application: LiveIntegrationApi
    CreateBy: BizCloudExperts
    Environment: ${self:custom.stage}

package:
  individually: true

functions:
  uber-freight-create-shipment: ${file(config/functions/uber-freight-create-shipment.yml):function}

layers:
  NodeModules:
    path: lambdaLayer/lib
    name: ${self:service}-layer-${self:provider.stage}
    description: LiVe integration api lambda layer for all node modules - ${self:provider.stage}
    compatibleRuntimes:
      - nodejs18.x
    retain: false
